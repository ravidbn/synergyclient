name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-8-jdk python3-pip autoconf automake libtool libtool-bin pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev
        sudo apt-get install -y build-essential m4 gettext autotools-dev
        
        # Ensure autotools are properly linked
        sudo autoreconf --version || echo "autoreconf check failed"
        sudo libtoolize --version || echo "libtoolize check failed"
        
        # Try to install libtinfo5, fallback to libtinfo6 if not available
        sudo apt-get install -y libtinfo5 || sudo apt-get install -y libtinfo6
        
        # Enable 32-bit architecture and install 32-bit packages (optional for modern builds)
        sudo dpkg --add-architecture i386 || true
        sudo apt-get update || true
        sudo apt-get install -y libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386 || echo "Warning: Some 32-bit packages not available, continuing without them"
        
    - name: Set up JDK 17 for Android SDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 30
        build-tools: 30.0.3
        
    - name: Accept Android licenses
      run: |
        mkdir -p "$ANDROID_HOME/licenses"
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
        echo "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license-old"
        
    - name: Set up JDK 8 for Buildozer
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
    
    - name: Set Java 8 environment for Buildozer
      run: |
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
        echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
        java -version
        
    - name: Install buildozer and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade buildozer
        pip install cython==0.29.33
        pip install -r requirements.txt
        
        # Show buildozer version for debugging
        buildozer --version
    
    - name: Clean buildozer cache (prevent submodule issues)
      run: |
        rm -rf .buildozer
        rm -rf .gitmodules
    
    - name: Build APK
      run: |
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export ANDROID_HOME=$ANDROID_HOME
        export ACLOCAL_PATH="/usr/share/aclocal"
        export M4PATH="/usr/share/aclocal"
        
        # Try building with less verbose to avoid overwhelming logs
        buildozer android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk
